#BlueJ class context
comment0.params=baked_count\ meat_count\ dairy_count\ fruit_count\ veg_count\ bev_count
comment0.target=Market(int,\ int,\ int,\ int,\ int,\ int)
comment0.text=\r\n\ Default\ constructor.\r\n\ \r\n\ Initializes\ market\ parameters.\r\n\ \r\n\ @param\ baked_count\ Number\ of\ stalls\ selling\ baked\ goods.\r\n\ @param\ meat_count\ Number\ of\ stalls\ selling\ meat.\r\n\ @param\ dairy_count\ Number\ of\ stalls\ selling\ dairy\ products.\r\n\ @param\ fruit_count\ Number\ of\ stalls\ selling\ fruits.\r\n\ @param\ veg_count\ Number\ of\ stalls\ selling\ vegetables.\r\n\ @param\ bev_count\ Number\ of\ stalls\ selling\ beverages.\r\n
comment1.params=baked_count\ meat_count\ dairy_count\ fruit_count\ veg_count\ bev_count
comment1.target=void\ generateStalls(int,\ int,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ Method\ to\ generate\ initial\ state\ of\ stalls\ in\ the\ market.\r\n\ \r\n\ Adds\ new\ stalls\ of\ each\ type\ to\ corresponding\ ArrayLists\ based\ on\ the\ stall\ counts.\r\n\ \r\n\ @param\ baked_count\ Number\ of\ stalls\ selling\ baked\ goods.\r\n\ @param\ meat_count\ Number\ of\ stalls\ selling\ meat.\r\n\ @param\ dairy_count\ Number\ of\ stalls\ selling\ dairy\ products.\r\n\ @param\ fruit_count\ Number\ of\ stalls\ selling\ fruits.\r\n\ @param\ veg_count\ Number\ of\ stalls\ selling\ vegetables.\r\n\ @param\ bev_count\ Number\ of\ stalls\ selling\ beverages.\r\n
comment10.params=
comment10.target=void\ checkQueues()
comment10.text=\r\n\ Method\ to\ check\ and\ adjust\ the\ queues\ for\ every\ stall.\r\n\ \r\n\ If\ a\ customer\ is\ removed\ from\ a\ queue\ it\ is\ added\ to\ a\ different\ queue.\r\n
comment11.params=
comment11.target=int\ getAverageCustomerTime()
comment11.text=\r\n\ Method\ to\ calculate\ and\ return\ the\ average\ time\ spent\ by\ customers\ in\ the\ market.\r\n\ \r\n\ @return\ Returns\ the\ average\ time\ spent.\r\n
comment12.params=
comment12.target=void\ printStallStats()
comment12.text=\r\n\ Method\ to\ print\ a\ set\ of\ stats\ for\ each\ stall.\r\n\ \r\n\ This\ method\ calls\ another\ method\ pertaining\ to\ each\ different\ stall.\r\n
comment2.params=
comment2.target=int\ getUnits()
comment2.text=\r\n\ Method\ to\ retrieve\ number\ of\ units\ for\ the\ market.\r\n\ \r\n\ @return\ Number\ of\ units\ occupied\ by\ market.\ \r\n\ \r\n
comment3.params=
comment3.target=boolean\ hasUnits()
comment3.text=\r\n\ Method\ to\ check\ if\ the\ market\ has\ available\ units.\r\n\ \r\n\ @return\ True\ if\ there\ is\ space,\ otherwise\ false.\ \r\n\ \r\n
comment4.params=
comment4.target=int\ getCustomersEntered()
comment4.text=\r\n\ Method\ to\ retrieve\ number\ of\ customers\ who\ have\ entered\ the\ market.\r\n\ \r\n\ @return\ Total\ number\ of\ customers\ who\ entered\ the\ market.\ \r\n\ \r\n
comment5.params=
comment5.target=int\ getCustomersLeft()
comment5.text=\r\n\ Method\ to\ retrieve\ number\ of\ customers\ who\ have\ left\ the\ market.\r\n\ \r\n\ @return\ Total\ number\ of\ customers\ who\ left\ the\ market.\ \r\n\ \r\n
comment6.params=
comment6.target=void\ addNewCustomer()
comment6.text=\r\n\ Method\ called\ when\ a\ new\ customer\ is\ to\ be\ added\ to\ the\ Market.\r\n\ \r\n\ This\ method\ calls\ a\ different\ method\ to\ add\ a\ customer\ to\ a\ queue.\r\n
comment7.params=customer
comment7.target=void\ addCustomer(Customer)
comment7.text=\r\n\ Method\ called\ to\ add\ a\ customer\ to\ a\ queue.\r\n\ \r\n\ Sequentially\ checks\ a\ customers\ needs\ and\ then\ calls\ methods\ to\ place\ in\ a\ queue\ with\ least\ number\ of\ customers.\ \r\n\ \r\n\ @param\ customer\ Customer\ to\ be\ added\ to\ a\ queue.\r\n
comment8.params=customer\ StallList
comment8.target=boolean\ decideAndPlace(Customer,\ java.util.ArrayList)
comment8.text=\r\n\ Method\ to\ try\ and\ add\ a\ customer\ to\ the\ emptiest\ stall\ of\ a\ given\ type.\r\n\ \r\n\ Sequentially\ checks\ stalls\ and\ their\ capacities\ to\ determine\ which\ stall\ has\ the\ most\ available\ units.\r\n\ \r\n\ @param\ customer\ Customer\ to\ be\ added\ to\ a\ queue.\r\n\ @param\ StallList\ The\ list\ of\ stalls\ to\ be\ decided\ from.\r\n
comment9.params=
comment9.target=int\ checkWaitingArea()
comment9.text=\r\n\ Method\ to\ check\ waiting\ area\ and\ try\ to\ place\ the\ customers\ in\ waiting\ area\ in\ an\ available\ queue.\r\n\ \r\n\ @return\ Returns\ the\ size\ of\ the\ waiting\ area\ after\ it\ is\ processed.\r\n
numComments=13
