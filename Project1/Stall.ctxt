#BlueJ class context
comment0.params=ID
comment0.target=Stall(int)
comment0.text=\r\n\ Default\ constructor.\r\n\ \r\n\ Initializes\ ID\ and\ initial\ state\ for\ all\ variables.\ \r\n\ \r\n\ @param\ ID\ Unique\ ID\ for\ every\ instance\ of\ certain\ type\ of\ stall.\r\n
comment1.params=
comment1.target=Queue\ getQueue()
comment1.text=\r\n\ Retrieves\ the\ Customer\ queue\ in\ its\ current\ state.\r\n\ \r\n\ @return\ Returns\ the\ current\ queue.\r\n
comment2.params=
comment2.target=int\ getUnits()
comment2.text=\r\n\ Method\ to\ retrieve\ number\ of\ units\ for\ each\ stall.\r\n\ \r\n\ @return\ Number\ of\ units\ occupied\ by\ stall.\ \r\n
comment3.params=
comment3.target=boolean\ hasUnits()
comment3.text=\r\n\ Method\ to\ check\ if\ stall\ has\ available\ units.\r\n\ \r\n\ @return\ True\ if\ there\ is\ space,\ otherwise\ false.\ \r\n
comment4.params=customer
comment4.target=void\ addCustomer(Customer)
comment4.text=\r\n\ Method\ to\ add\ a\ new\ Customer\ to\ the\ queue.\r\n\ \r\n\ @param\ customer\ Customer\ object\ to\ be\ added.\r\n
comment5.params=
comment5.target=Customer\ checkAndRemove()
comment5.text=\r\n\ Method\ to\ check\ if\ the\ customer\ at\ the\ front\ of\ the\ queue\ has\ finished.\r\n\ \r\n\ If\ the\ customer\ has\ finished\ he\ is\ removed\ from\ the\ queue.\r\n\ \r\n\ @return\ Customer\ removed\ from\ the\ queue\ is\ retrieved\ and\ returned.\r\n
comment6.params=
comment6.target=int\ getAverageCustomerTime()
comment6.text=\r\n\ Method\ to\ calculate\ and\ return\ the\ average\ waiting\ time\ for\ customers\ at\ the\ stall.\r\n\ \r\n\ @return\ Returns\ the\ average\ waiting\ time\r\n
comment7.params=
comment7.target=void\ printCustomerStats()
comment7.text=\r\n\ Method\ to\ print\ a\ set\ of\ statistics\ for\ the\ stall.\r\n
comment8.params=
comment8.target=int\ getID()
comment8.text=\r\n\ Retrieves\ a\ stall's\ ID\ number.\r\n\ \r\n\ @return\ Returns\ ID\ as\ integer.\r\n
numComments=9
